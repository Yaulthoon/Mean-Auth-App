{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AAC2B;AAGA;AACS;AACZ;AACe;AACN;AAC1B;AAIhD,IAAM,MAAM,GAAW;IAEvB;QACC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAa;KACxB;IAED;QACC,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,yFAAiB;KAC5B;IAED;QACC,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,gFAAc;KACzB;IAED;QACC,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4FAAkB;QAC7B,WAAW,EAAE,CAAC,4DAAS,CAAC;KACxB;IAED;QACC,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,sFAAgB;QAC3B,WAAW,EAAE,CAAC,4DAAS,CAAC;KACxB;CAEA,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AChD7B,mB;;;;;;;;;;;ACAA,2L;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AAEF;AACf;AACI;AACE;AACwB;AACH;AACS;AACZ;AACe;AACN;AAClB;AAET;AACC;AAEc;AACR;AA8BtD;IAAA;IAAyB,CAAC;IAAb,SAAS;QA5BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,mFAAe;gBACf,gFAAc;gBACd,yFAAiB;gBACjB,6EAAa;gBACb,4FAAkB;gBAClB,uFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBAChB,qEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;gBAChB,6DAAS,CAAC,OAAO,CAAC;oBACb,MAAM,EAAE;wBACN,WAAW,EAAE;4BACf,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;wBAC9C,CAAC;wBACG,kBAAkB,EAAE,CAAC,gBAAgB,CAAC;wBACtC,iBAAiB,EAAE,CAAC,yBAAyB,CAAC;qBAC/C;iBACF,CAAC;aACH;YACD,SAAS,EAAE,CAAC,2EAAe,EAAE,mEAAW,EAAE,6DAAS,CAAC;YACpD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AChDtB,mB;;;;;;;;;;;ACAA,6F;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,mB;;;;;;;;;;;ACAA,82B;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,mB;;;;;;;;;;;ACAA,iiBAAiiB,mBAAmB,qB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlgB;AACO;AAChB;AAOzC;IAME,wBAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEzE,iCAAQ,GAAR;IACA,CAAC;IAED,sCAAa,GAAb;QAAA,iBAsBC;QArBA,IAAM,IAAI,GAAG;YACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACvB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAQ;YAC1D,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACpC,KAAI,CAAC,YAAY,GAAG,iCAAiC,CAAC;gBACtD,UAAU,CAAC;oBACV,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACxB,CAAC,EAAE,IAAI,CAAC,CAAC;YACV,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,KAAI,CAAC,YAAY,GAAG,cAAc,CAAC;gBACnC,UAAU,CAAC;oBACV,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACxB,CAAC,EAAE,IAAI,CAAC,CAAC;YACV,CAAC;QACF,CAAC,CAAC,CAAC;IAEJ,CAAC;IAjCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAO4B,sDAAM,EAAuB,kEAAW;OANzD,cAAc,CAmC1B;IAAD,qBAAC;CAAA;AAnC0B;;;;;;;;;;;;ACT3B,mB;;;;;;;;;;;ACAA,kxBAAkxB,WAAW,2NAA2N,WAAW,+JAA+J,WAAW,0JAA0J,WAAW,sJAAsJ,WAAW,+O;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj8C;AACO;AAChB;AAOzC;IAEE,yBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,kCAAQ,GAAR;IACA,CAAC;IAED,uCAAa,GAAb;QACC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAXU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAGiC,kEAAW,EAAkB,sDAAM;OAFzD,eAAe,CAc3B;IAAD,sBAAC;CAAA;AAd2B;;;;;;;;;;;;ACT5B,mB;;;;;;;;;;;ACAA,yEAAyE,WAAW,kEAAkE,eAAe,uCAAuC,YAAY,qB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtK;AACQ;AACjB;AAOzC;IAIE,0BAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEzE,mCAAQ,GAAR;QAAA,iBASC;QARA,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,OAAW;YACnD,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,EACD,aAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACJ,CAAC;IAfU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAK4B,sDAAM,EAAuB,kEAAW;OAJzD,gBAAgB,CAiB5B;IAAD,uBAAC;CAAA;AAjB4B;;;;;;;;;;;;ACT7B,mB;;;;;;;;;;;ACAA,u0BAAu0B,mBAAmB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxyB;AACe;AACR;AAEhB;AAUzC;IAOE,2BAAoB,MAAc,EAAU,eAAgC,EAAU,WAAwB;QAA1F,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEnH,oCAAQ,GAAR;QACC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAqCC;QApCC,IAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEL,EAAE,EAAC,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,2BAA2B,CAAC;YAClD,UAAU,CAAC;gBACX,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACxB,CAAC,EAAE,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,iBAAiB;QACjB,EAAE,EAAC,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC;YAClD,IAAI,CAAC,YAAY,GAAG,0BAA0B,CAAC;YACjD,UAAU,CAAC;gBACX,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACxB,CAAC,EAAE,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAEJ,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBACd,KAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC;gBACvC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;gBAC3C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACtC,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAlDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAQ4B,sDAAM,EAA2B,0EAAe,EAAuB,kEAAW;OAPnG,iBAAiB,CAqD7B;IAAD,wBAAC;CAAA;AArD6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACda;AACW;AACC;AAGvD;IAEC,mBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAE,CAAC;IAEvE,+BAAW,GAAX;QACC,EAAE,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;IAEF,CAAC;IAZW,SAAS;QADrB,gEAAU,EAAE;yCAGqB,kEAAW,EAAkB,sDAAM;OAFxD,SAAS,CAcrB;IAAD,gBAAC;CAAA;AAdqB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLqB;AAEO;AACC;AACG;AAItD;IAMC,qBAAoB,IAAgB,EAAS,SAA2B;QAApD,SAAI,GAAJ,IAAI,CAAY;QAAS,cAAS,GAAT,SAAS,CAAkB;IAAI,CAAC;IAE7E,kCAAY,GAAZ,UAAa,IAAI;QAChB,IAAM,WAAW,GAAG;YACtB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAG,kBAAkB;aACnC,CAAC;SACF,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAClF,CAAC;IAED,sCAAgB,GAAhB,UAAiB,IAAI;QACpB,IAAM,WAAW,GAAG;YACtB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAG,kBAAkB;aACnC,CAAC;SACF,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAEtF,CAAC;IAED,gCAAU,GAAV;QACC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAM,WAAW,GAAG;YACtB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAG,kBAAkB;gBACnC,eAAe,EAAE,IAAI,CAAC,SAAS;aAC/B,CAAC;SACF,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,EAAE,WAAW,CAAC,CAAC;IAE1E,CAAC;IAED,mCAAa,GAAb,UAAc,KAAK,EAAE,IAAI;QACxB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,+BAAS,GAAT;QACC,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,8BAAQ,GAAR;QACC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC;IAED,4BAAM,GAAN;QACC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IA5DW,WAAW;QADvB,gEAAU,EAAE;yCAOc,+DAAU,EAAoB,mEAAgB;OAN5D,WAAW,CA8DvB;IAAD,kBAAC;CAAA;AA9DuB;;;;;;;;;;;;;;;;;;;;;;;;;ACRmB;AAG3C;IAEE;IAAgB,CAAC;IAEjB,0CAAgB,GAAhB,UAAiB,IAAI;QACnB,EAAE,EAAC,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,EAAC;YAChH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,uCAAa,GAAb,UAAc,KAAK;QACjB,IAAM,EAAE,GAAG,wJAAwJ,CAAC;QACpK,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAfU,eAAe;QAD3B,gEAAU,EAAE;;OACA,eAAe,CAgB3B;IAAD,sBAAC;CAAA;AAhB2B;;;;;;;;;;;;;;ACH5B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n{\r\n\tpath: '',\r\n\tcomponent: HomeComponent\r\n},\r\n\r\n{\r\n\tpath: 'register',\r\n\tcomponent: RegisterComponent\r\n},\r\n\r\n{\r\n\tpath: 'login',\r\n\tcomponent: LoginComponent\r\n},\r\n\r\n{\r\n\tpath: 'dashboard',\r\n\tcomponent: DashboardComponent,\r\n\tcanActivate: [AuthGuard]\r\n},\r\n\r\n{\r\n\tpath: 'profile',\r\n\tcomponent: ProfileComponent,\r\n\tcanActivate: [AuthGuard]\r\n}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n\\n<div class = \\\"container\\\">\\n<router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { map } from 'rxjs/operators';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n\tAppRoutingModule,\n\tFormsModule,\n\tHttpClientModule,\n\tJwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n      return localStorage.getItem('access_token');\n    },\n        whitelistedDomains: ['localhost:3000'],\n        blacklistedRoutes: ['localhost:3000/api/auth']\n      }\n    })\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2 class = 'page-header'>Dashboard</h2>\\n<p>Welcome to your dashboard</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN Authentication App</h1>\\n  <p class=\\\"lead\\\">Welcome to our custom MEAN authentication application built from scratch</p>\\n  <div>\\n    <a class=\\\"btn btn-primary\\\" routerLink=\\\"/register\\\">Register</a> <a class=\\\"btn btn-default\\\" routerLink=\\\"/login\\\">Login</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Express Backend</h3>\\n    <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Angular-CLI</h3>\\n    <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>JWT Tokens</h3>\\n    <p>Full featured authentication using JSON web tokens. Login and store user data</p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n    <span class = 'lead' style = 'margin-left: 10px'>{{this.errorMessage}}</span>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: String;\n  password: String;\n  errorMessage: String;\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n  \n  onLoginSubmit() {\n\t  const user = {\n\t\t  username: this.username,\n\t\t  password: this.password\n\t  };\n\t  \n\t  this.authService.authenticateUser(user).subscribe((data:any) => {\n\t\t  if(data.success) {\n\t\t\t  this.authService.storeUserData(data.token, data.user);\n\t\t\t  this.router.navigate(['dashboard']);\n\t\t\t  this.errorMessage = 'You have logged in successfully';\n\t\t\t  setTimeout(() => {\n\t\t\t\t  this.errorMessage = '';\n\t\t\t  }, 3000);\n\t\t  } else {\n\t\t\t  this.errorMessage = \"Failed login\";\n\t\t\t  setTimeout(() => {\n\t\t\t\t  this.errorMessage = '';\n\t\t\t  }, 3000);\n\t\t  }\n\t  });\n\t  \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"nav navbar-inverse\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n          </button>\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MEAN Auth App</a>\\n        </div>\\n        <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n         <ul class=\\\"nav navbar-nav navbar-left\\\">\\n            <li routerLinkActive='active' [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a routerLink='/'>Home</a></li>\\n          </ul>\\n\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <li *ngIf =  \\\"!authService.loggedIn()\\\" routerLinkActive='active' [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a routerLink='/dashboard'>Dashboard</a></li>\\n            <li *ngIf = \\\"!authService.loggedIn()\\\" routerLinkActive='active' [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a routerLink='/profile'>Profile</a></li>\\n            <li *ngIf = \\\"authService.loggedIn()\\\" routerLinkActive='active' [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a routerLink='/login'>Login</a></li>\\n            <li *ngIf = \\\"authService.loggedIn()\\\" routerLinkActive='active' [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a routerLink='/register'>Register</a></li>\\n\\t\\t\\t<li *ngIf = \\\"!authService.loggedIn()\\\"><a (click) = \\\"onLogoutClick()\\\" href = \\\"#\\\">Logout</a></li>\\n          </ul>\\n        </div><!--/.nav-collapse -->\\n      </div>\\n    </nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  \n  onLogoutClick() {\n\t  this.authService.logout();\n\t  this.router.navigate(['/login']);\n\t  return false;\n  }\n\t  \n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf = 'this.user'>\\n<h2 class = 'page-header'>{{user.name}}</h2>\\n<ul class = 'list-group'>\\n<li class = 'list-group-item'>{{user.username}}</li>\\n<li class = 'list-group-item'>{{user.email}}</li>\\n</ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: Object;\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n\t  this.authService.getProfile().subscribe((profile:any) => {\n\t\t  this.user = profile.user;\n\t\t  console.log(profile.user);\n\t  },\n\t  err => {\n\t\t  console.log(err);\n\t\t  return false;\n\t  });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2>\\n<form (ngSubmit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n  <span class = 'lead' style = 'margin-left: 10px'>{{this.errorMessage}}</span>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service'\nimport { AuthService } from '../../services/auth.service'\nimport { RouterModule, Routes } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  errorMessage: String;\n\n  constructor(private router: Router, private validateService: ValidateService, private authService: AuthService) { }\n\n  ngOnInit() {\n\t  console.log(this.authService);\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    };\n\t\n\tif(!this.validateService.validateRegister(user)){\n      this.errorMessage = 'Please fill in all fields';\n\t   setTimeout(() => {\n\t\t  this.errorMessage = '';\n\t\t  console.log('changed');\n\t  }, 3000);\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.errorMessage = 'Please use a valid email';\n\t   setTimeout(() => {\n\t\t  this.errorMessage = '';\n\t\t  console.log('changed');\n\t  }, 3000);\n      return false;\n    }\n\t\n\tthis.authService.registerUser(user).subscribe(data => {\n      if(data.success){\n         this.errorMessage = 'User registered';\n        this.router.navigate(['/login']);\n      } else {\n        this.errorMessage = 'Something went wrong';\n        this.router.navigate(['/register']);\n      }\n    });\n  \n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable() \r\nexport class AuthGuard implements CanActivate {\r\n\t\r\n\tconstructor(private authService: AuthService, private router: Router){}\r\n\t\r\n\tcanActivate(): boolean {\r\n\t\tif(!this.authService.loggedIn()) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.router.navigate(['/login']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n\nauthToken: any;\nuser: any;\nresponse: any;\n\n\tconstructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\n\n\tregisterUser(user):any {\n\t\tconst httpOptions = {\nheaders: new HttpHeaders({\n\t\t\t\t'Content-Type':  'application/json'\n\t\t\t})\n\t\t};\n\t\treturn this.http.post('http://localhost:3000/users/register', user, httpOptions);\n\t}\n\n\tauthenticateUser(user) {\n\t\tconst httpOptions = {\nheaders: new HttpHeaders({\n\t\t\t\t'Content-Type':  'application/json'\n\t\t\t})\n\t\t};\n\t\treturn this.http.post('http://localhost:3000/users/authenticate', user, httpOptions);\n\t\t\n\t}\n\n\tgetProfile() {\n\t\tthis.loadToken();\n\t\tconst httpOptions = {\nheaders: new HttpHeaders({\n\t\t\t\t'Content-Type':  'application/json',\n\t\t\t\t'Authorization': this.authToken\n\t\t\t})\n\t\t};\n\t\treturn this.http.get('http://localhost:3000/users/profile', httpOptions);\n\n\t}\n\n\tstoreUserData(token, user) {\n\t\tlocalStorage.setItem('id_token', token);\n\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\tthis.authToken = token;\n\t\tthis.user = user;\n\t}\n\n\tloadToken() {\n\t\tconst token = localStorage.getItem('id_token');\n\t\tthis.authToken = token;\n\t}\n\t\n\tloggedIn() {\n\t\tthis.loadToken();\n\t\treturn this.jwtHelper.isTokenExpired(this.authToken);\n\t}\n\n\tlogout() {\n\t\tthis.authToken = null;\n\t\tthis.user = null;\n\t\tlocalStorage.clear();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}